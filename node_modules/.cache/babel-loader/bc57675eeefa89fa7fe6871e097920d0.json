{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst init = {\n  cart: [],\n  itemStatus: {\n    status: \"\",\n    message: \"\"\n  },\n  subtotal: null,\n  totalItems: null\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    value: init\n  },\n  reducers: {\n    addItem: (state, action) => {\n      state.value.cart.push(action.payload);\n      sessionStorage.setItem(\"cart\", JSON.stringify(state.value.cart));\n    },\n    removeItem: (state, action) => {\n      state.value.cart.splice(action.payload, 1);\n      sessionStorage.setItem(\"cart\", JSON.stringify(state.value.cart));\n    },\n    updateStatus: (state, action) => {\n      state.value.itemStatus = action.payload;\n    },\n    calculateSubtotal: (state, action) => {\n      let total = 0;\n      state.value.cart.forEach(item => {\n        let price = item.itemPrice;\n        let qty = item.qty;\n        let itemTotal = price * qty;\n        total += itemTotal;\n      });\n      state.value.subtotal = total.toFixed(2);\n    },\n    calculateTotalItems: (state, action) => {\n      let total = 0;\n      state.value.cart.forEach(item => {\n        let qty = item.qty;\n        total += qty;\n      });\n      state.value.totalItems = total;\n    }\n  }\n});\nexport const {\n  addItem\n} = cartSlice.actions;\nexport const {\n  removeItem\n} = cartSlice.actions;\nexport const {\n  updateStatus\n} = cartSlice.actions;\nexport const {\n  calculateSubtotal\n} = cartSlice.actions;\nexport const {\n  calculateTotalItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/donavin/Projects/thegreeneroommaster/client/src/Features/Cart.js"],"names":["createSlice","init","cart","itemStatus","status","message","subtotal","totalItems","cartSlice","name","initialState","value","reducers","addItem","state","action","push","payload","sessionStorage","setItem","JSON","stringify","removeItem","splice","updateStatus","calculateSubtotal","total","forEach","item","price","itemPrice","qty","itemTotal","toFixed","calculateTotalItems","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst init = {\n  cart: [],\n  itemStatus: {\n    status: \"\",\n    message: \"\",\n  },\n  subtotal: null,\n  totalItems: null,\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { value: init },\n  reducers: {\n    addItem: (state, action) => {\n      state.value.cart.push(action.payload);\n      sessionStorage.setItem(\"cart\", JSON.stringify(state.value.cart));\n    },\n    removeItem: (state, action) => {\n      state.value.cart.splice(action.payload, 1);\n      sessionStorage.setItem(\"cart\", JSON.stringify(state.value.cart));\n    },\n    updateStatus: (state, action) => {\n      state.value.itemStatus = action.payload;\n    },\n    calculateSubtotal: (state, action) => {\n      let total = 0;\n\n      state.value.cart.forEach((item) => {\n        let price = item.itemPrice;\n        let qty = item.qty;\n        let itemTotal = price * qty;\n        total += itemTotal;\n      });\n\n      state.value.subtotal = total.toFixed(2);\n    },\n    calculateTotalItems: (state, action) => {\n      let total = 0;\n\n      state.value.cart.forEach((item) => {\n        let qty = item.qty;\n        total += qty;\n      });\n\n      state.value.totalItems = total;\n    },\n  },\n});\n\nexport const { addItem } = cartSlice.actions;\nexport const { removeItem } = cartSlice.actions;\nexport const { updateStatus } = cartSlice.actions;\nexport const { calculateSubtotal } = cartSlice.actions;\nexport const { calculateTotalItems } = cartSlice.actions;\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}